const renderSet = (themeName, setName, colors) => {
  const colorMap = {
    foreground: colors.shade6,
    background: colors.shade0,
    color0: colors.shade0,
    color1: colors.accent0,
    color2: colors.accent3,
    color3: colors.accent2,
    color4: colors.accent5,
    color5: colors.accent7,
    color6: colors.accent4,
    color7: colors.shade6,
    color8: colors.shade1,
    color9: colors.accent1,
    color10: colors.accent4,
    color11: colors.accent2,
    color12: colors.accent5,
    color13: colors.accent7,
    color14: colors.accent4,
    color15: colors.shade7,
  }

  let output = []
  output.push('# generated by theme_kitty')
  output.push('# ' + setName + ' variant of theme ' + themeName)

  for (var key in colorMap) {
    output.push(key + ' ' + colorMap[key])
  }

  return output.join('\n')
}

module.exports.render = (colors, options) => {
  const colorSets = [
    {name: 'dark', colors: colors.dark},
    {name: 'light', colors: colors.light},
  ].filter((x) => !!x.colors)

  let promises = []

  for (var set in colorSets) {
    let theme = renderSet(options.colors, colorSets[set].name, colorSets[set].colors)
    let data = {name: colorSets[set].name + '.config', contents: Buffer.from(theme, 'utf8')}
    promises.push(Promise.resolve(data))
  }

  return promises
}
